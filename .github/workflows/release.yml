name: Release

on:
  workflow_dispatch:
    inputs:
      package:
        description: Which crate to release
        type: choice
        required: true
        options:
          - nu-jupyter-kernel
          - nu_plugin_plotters

permissions:
  contents: write

env:
  PACKAGE: ${{ inputs.package }}
  OUCH_VERSION: "0.6.1"

jobs:
  build:
    name: Build ${{ inputs.package }} for ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy: 
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: ubuntu-24.04-arm
            target: aarch64-unknown-linux-gnu
          - os: windows-latest
            target: x86_64-pc-windows-msvc
    env:
      ARTIFACT_NAME: ${{inputs.package}}-${{ matrix.target }}.zip
    
    steps:
      - name: Install System Deps
        if: runner.os == 'Linux'
        run: |
          sudo apt update -y
          sudo apt upgrade -y
          sudo apt install -y pkg-config libfreetype6-dev libfontconfig1-dev

      - name: Update Rust Toolchain
        run: rustup up

      - name: Checkout
        uses: actions/checkout@v4

      - name: Build Release
        run: cargo build --release -p "${{ env.PACKAGE }}"

      - name: Zip Release
        uses: vimtor/action-zip@v1.2
        with:
          files: target/release/${{ inputs.package }} target/release/${{ inputs.package }}.exe
          dest: ${{ env.ARTIFACT_NAME }}

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{ env.ARTIFACT_NAME }}

  draft:
    name: Draft Release
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v5
        with:
          path: dist
          merge-multiple: true

      - name: LS dist
        run: ls -R dist

      - name: Checkout Cargo.lock
        uses: actions/checkout@v4
        with:
          sparse-checkout: Cargo.lock
          sparse-checkout-cone-mode: false

      - name: Setup Nushell
        uses: hustcer/setup-nu@v3
        with:
          version: "0.107.0"

      - name: Get Version
        id: version
        shell: nu {0}
        run: | 
          open Cargo.lock 
          | from toml 
          | get package 
          | where name == "${{ inputs.package }}" 
          | get version.0
          | "version=" + $in
          | save $env.GITHUB_OUTPUT -ra

      - name: Draft Release
        run: gh release create --draft "$TAG" dist/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG: ${{ inputs.package }}/v${{ steps.version.outputs.version }}
